(()=>{function o(o,s){return null!=o.find((o=>JSON.stringify(o)===JSON.stringify(s)))}class s{constructor(o,s){this.coords=[o,s],this.nextMoves=[]}}let r=new class{constructor(o){this.numVertices=o,this.AdjList=new Map}addVertex(o){this.AdjList.set(o,[])}getVertex(o,s){for(let[r,t]of this.AdjList)if(o===r[0]&&s===r[1])return[r,t]}addEdge(o,s){this.AdjList.get(o).push(s)}printGraph(){let o=this.AdjList.keys();for(let s of o)this.AdjList.get(s);for(let o of getValues)conc+=o+" ";console.log(i+" -> "+conc)}}(64),t=[];for(let o=0;o<8;o++)for(let r=0;r<8;r++){let v=new s(o,r);t.push(v)}for(v of t)v.coords[0]+2<8&&v.coords[1]+1<8&&v.nextMoves.push(v.coords[0]+2,v.coords[1]+1),v.coords[0]+1<8&&v.coords[1]+2<8&&v.nextMoves.push(v.coords[0]+1,v.coords[1]+2),v.coords[0]-1>=0&&v.coords[1]+2<8&&v.nextMoves.push(v.coords[0]-1,v.coords[1]+2),v.coords[0]-2>=0&&v.coords[1]+1<8&&v.nextMoves.push(v.coords[0]-2,v.coords[1]+1),v.coords[0]-2>=0&&v.coords[1]-1>=0&&v.nextMoves.push(v.coords[0]-2,v.coords[1]-1),v.coords[0]-1>=0&&v.coords[1]-2>=0&&v.nextMoves.push(v.coords[0]-1,v.coords[1]-2),v.coords[0]+1<8&&v.coords[1]-2>=0&&v.nextMoves.push(v.coords[0]+1,v.coords[1]-2),v.coords[0]+2<8&&v.coords[1]-1>=0&&v.nextMoves.push(v.coords[0]+2,v.coords[1]-1);var e;console.log(function s(t,c,d=[e],i=[]){let n=`${JSON.stringify(t)}`,f=r.getVertex(t[0],t[1])[1];for(v of f)if(JSON.stringify(v)===JSON.stringify(c))return d.push(c),n+=` ${JSON.stringify(v)}`,console.log(n),n;for(v of f)o(d,v)||(d.push(v),i.push(v));let u=i[0];i.shift();let h=s(u,c,d,i);return h.includes(JSON.stringify(c))&&(n+=h),""}(e=[3,3],[0,0]))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,