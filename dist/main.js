(()=>{function i(i,s){return null!=i.find((i=>JSON.stringify(i)===JSON.stringify(s)))}class s{constructor(i,s){this.coords=[i,s],this.neighbouringMoves=[],this.previousPosition=null,i+2<8&&s+1<8&&this.neighbouringMoves.push([i+2,s+1]),i+1<8&&s+2<8&&this.neighbouringMoves.push([i+1,s+2]),i-1>=0&&s+2<8&&this.neighbouringMoves.push([i-1,s+2]),i-2>=0&&s+1<8&&this.neighbouringMoves.push([i-2,s+1]),i-2>=0&&s-1>=0&&this.neighbouringMoves.push([i-2,s-1]),i-1>=0&&s-2>=0&&this.neighbouringMoves.push([i-1,s-2]),i+1<8&&s-2>=0&&this.neighbouringMoves.push([i+1,s-2]),i+2<8&&s-1>=0&&this.neighbouringMoves.push([i+2,s-1])}}let n=[];for(let i=0;i<8;i++)for(let o=0;o<8;o++){let t=new s(i,o);n.push(t)}function o(i,s){for(node of s)if(JSON.stringify(i)===JSON.stringify(node.coords))return node}console.log(function s(t,e,r=[],u=[]){let h=o(t,n),g=h.previousPosition,f="";for(v of(u.push(t),h.neighbouringMoves))if(JSON.stringify(v)===JSON.stringify(e))return u.push(e),f=`${JSON.stringify(t)}${JSON.stringify(v)}`,[f,g];for(v of h.neighbouringMoves){let s=o(v,n);i(u,v)||(s.previousPosition=t,u.push(v),r.push(v))}let l=r[0];r.shift();let p=null;return[p,g]=s(l,e,r,u),f+=p,JSON.stringify(t)===JSON.stringify(u[0])&&(g=t),g===t?(g=o(g,n).previousPosition,f=JSON.stringify(t)+f,[f,g]):[""+f,g]}([0,0],[7,6])[0])})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,