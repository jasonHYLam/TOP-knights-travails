(()=>{const l=new class{constructor(l,o){return this.position=[l,o],this.col=l,this.row=o,this.uur=null,this.urr=null,this.drr=null,this.ddr=null,this.ddl=null,this.dll=null,this.ull=null,this.uul=null,this.position}}(2,2);console.log(l),function o(r=l){if(r.col<0||r.col>7||r.row<0||r.row>7)return null;r.uur=o(col+2<8||row+1<8),r.urr=o(col+1<8||row+2<8),r.drr=o(col-1<8||row+2>0),r.ddr=o(col-1<8||row+1>0),r.ddl=o(col-2>0||row-1>0),r.dll=o(col-1>0||row-2>0),r.ull=o(col+1>0||row-2<8),r.uul=o(col+2>0||row-1<8)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiTUEyQ0EsTUFBTUEsRUFBTyxJQXZCYixNQUNJLFdBQUFDLENBQVlDLEVBQUtDLEdBaUJiLE9BaEJBQyxLQUFLQyxTQUFXLENBQUNILEVBQUtDLEdBQ3RCQyxLQUFLRixJQUFNQSxFQUNYRSxLQUFLRCxJQUFNQSxFQUdmQyxLQUFLRSxJQUFNLEtBQ1hGLEtBQUtHLElBQU0sS0FDWEgsS0FBS0ksSUFBTSxLQUNYSixLQUFLSyxJQUFNLEtBQ1hMLEtBQUtNLElBQU0sS0FDWE4sS0FBS08sSUFBTSxLQUNYUCxLQUFLUSxJQUFNLEtBQ1hSLEtBQUtTLElBQU0sS0FJQVQsS0FBS0MsUUFFaEIsR0FHa0IsRUFBRSxHQUV4QlMsUUFBUUMsSUFBSWYsR0FFWixTQUFTZ0IsRUFBWUMsRUFBT2pCLEdBSXhCLEdBQUlpQixFQUFLZixJQUFNLEdBQUtlLEVBQUtmLElBQU0sR0FBS2UsRUFBS2QsSUFBTSxHQUFLYyxFQUFLZCxJQUFNLEVBQUcsT0FBTyxLQUt6RWMsRUFBS1gsSUFBTVUsRUFBWWQsSUFBSSxFQUFJLEdBQUtDLElBQUksRUFBSSxHQUM1Q2MsRUFBS1YsSUFBTVMsRUFBWWQsSUFBSSxFQUFJLEdBQUtDLElBQUksRUFBSSxHQUM1Q2MsRUFBS1QsSUFBTVEsRUFBWWQsSUFBSSxFQUFJLEdBQUtDLElBQUksRUFBSSxHQUM1Q2MsRUFBS1IsSUFBTU8sRUFBWWQsSUFBSSxFQUFJLEdBQUtDLElBQUksRUFBSSxHQUM1Q2MsRUFBS1AsSUFBTU0sRUFBWWQsSUFBSSxFQUFJLEdBQUtDLElBQUksRUFBSSxHQUM1Q2MsRUFBS04sSUFBTUssRUFBWWQsSUFBSSxFQUFJLEdBQUtDLElBQUksRUFBSSxHQUM1Q2MsRUFBS0wsSUFBTUksRUFBWWQsSUFBSSxFQUFJLEdBQUtDLElBQUksRUFBSSxHQUM1Q2MsRUFBS0osSUFBTUcsRUFBWWQsSUFBSSxFQUFJLEdBQUtDLElBQUksRUFBSSxFQUNoRCxDQUVBYSxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9wLWtuaWdodHMtdHJhdmFpbHMvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gdGhpcyBtaWdodCBiZSB0aGUgd3JvbmcgYXBwcm9hY2guXG4vLyBuZWVkIHRvIGJlIHRoaW5raW5nIG9mIGdyYXBocywgdHJlZXMsIG5vZGVzLCBhbmQgcmVjdXJzaW9uLCByYXRoZXIgdGhhbiBwbGFjaW5nIHN0dWZmIGluIGEgZ3JpZFxuLy8ganVzdCBuZWVkIGEgc3RhcnRpbmcgcG9pbnQsIHdpdGhpbiBhIGdyYXBoP1xuLy8gaSBuZWVkIHRvIHVuZGVyc3RhbmQgcmVjdXJzaW9uIGluIGEgZ3JhcGgsIGZpcnN0XG4gICAgLy8gdGhlbiwgaSBuZWVkIHRvIHRoaW5rIGFib3V0IHRoZSBsaXN0IG9mIHN0ZXBzIGxpa2UgYSB0cmVlXG5cbiAgICAvL3RoaXMgc2hvdWxkIGJlIGxpa2UgYSB0cmVlXG5cbiAgICAvLyB0aGUgd2FyZWhvdXNlXG5cbiAgICAvLyB0aGlzLnV1ciA9IChjb2wrMiA8IDggfHwgcm93KzEgPCA4KSA/IG5ldyBOb2RlKGNvbCArIDEsIHJvdyArIDIpIDogbnVsbFxuICAgIC8vIHRoaXMudXJyID0gKGNvbCsxIDwgOCB8fCByb3crMiA8IDgpID8gbmV3IE5vZGUoY29sICsgMiwgcm93ICsgMSkgOiBudWxsXG4gICAgLy8gdGhpcy5kcnIgPSAoY29sLTEgPCA4IHx8IHJvdysyID4gMCkgPyBuZXcgTm9kZShjb2wgKyAyLCByb3cgLSAxKSA6IG51bGxcbiAgICAvLyB0aGlzLmRkciA9IChjb2wtMSA8IDggfHwgcm93KzEgPiAwKSA/IG5ldyBOb2RlKGNvbCArIDEsIHJvdyAtIDIpIDogbnVsbFxuICAgIC8vIHRoaXMuZGRsID0gKGNvbC0yID4gMCB8fCByb3ctMSA+IDApID8gbmV3IE5vZGUoY29sIC0gMSwgcm93IC0gMikgOiBudWxsXG4gICAgLy8gdGhpcy5kbGwgPSAoY29sLTEgPiAwIHx8IHJvdy0yID4gMCkgPyBuZXcgTm9kZShjb2wgLSAxLCByb3cgLSAyKSA6IG51bGxcbiAgICAvLyB0aGlzLnVsbCA9IChjb2wrMSA+IDAgfHwgcm93LTIgPCA4KSA/IG5ldyBOb2RlKGNvbCAtIDIsIHJvdyArIDEpIDogbnVsbFxuICAgIC8vIHRoaXMudXVsID0gKGNvbCsyID4gMCB8fCByb3ctMSA8IDgpID8gbmV3IE5vZGUoY29sIC0gMSwgcm93ICsgMikgOiBudWxsXG5cbi8vIGRvIGkgbmVlZCB0byBjcmVhdGUgbm9kZXMuLi5cbmNsYXNzIE5vZGUge1xuICAgIGNvbnN0cnVjdG9yKGNvbCwgcm93KSB7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSBbY29sLCByb3ddXG4gICAgICAgIHRoaXMuY29sID0gY29sXG4gICAgICAgIHRoaXMucm93ID0gcm93XG4gICAgICAgIC8vIHRoaXMubGlzdE9mTW92ZXMgPSBsaXN0TW92ZXMoY29sLCByb3cpXG5cbiAgICB0aGlzLnV1ciA9IG51bGxcbiAgICB0aGlzLnVyciA9IG51bGxcbiAgICB0aGlzLmRyciA9IG51bGxcbiAgICB0aGlzLmRkciA9IG51bGxcbiAgICB0aGlzLmRkbCA9IG51bGxcbiAgICB0aGlzLmRsbCA9IG51bGxcbiAgICB0aGlzLnVsbCA9IG51bGxcbiAgICB0aGlzLnV1bCA9IG51bGxcblxuICAgICAgICAvLyBkbyBpIG5lZWQgdG8gY3JlYXRlIDggcG90ZW50aWFsIGNoaWxkcmVuP1xuXG4gICAgICAgIHJldHVybiB0aGlzLnBvc2l0aW9uXG5cbiAgICB9XG59XG5cbmNvbnN0IHJvb3QgPSBuZXcgTm9kZSgyLDIpXG5cbmNvbnNvbGUubG9nKHJvb3QpXG5cbmZ1bmN0aW9uIGNyZWF0ZUdyYXBoKG5vZGUgPSByb290KSB7XG4gICAgLy8gYmFzZSBjYXNlOyBpZiBvdXQgb2YgYm91bmRzLCB0aGVuIHJldHVybj9cblxuICAgIC8vIGxpa2UgXG4gICAgaWYgKG5vZGUuY29sIDwgMCB8fCBub2RlLmNvbCA+IDcgfHwgbm9kZS5yb3cgPCAwIHx8IG5vZGUucm93ID4gNykgcmV0dXJuIG51bGxcblxuICAgIC8vIGRvIGkgbmVlZCBhIHF1ZXVlP1xuXG4gICAgLy8gY3JlYXRlIDggcmVjdXJzaW9uc1xuICAgIG5vZGUudXVyID0gY3JlYXRlR3JhcGgoY29sKzIgPCA4IHx8IHJvdysxIDwgOClcbiAgICBub2RlLnVyciA9IGNyZWF0ZUdyYXBoKGNvbCsxIDwgOCB8fCByb3crMiA8IDgpXG4gICAgbm9kZS5kcnIgPSBjcmVhdGVHcmFwaChjb2wtMSA8IDggfHwgcm93KzIgPiAwKVxuICAgIG5vZGUuZGRyID0gY3JlYXRlR3JhcGgoY29sLTEgPCA4IHx8IHJvdysxID4gMClcbiAgICBub2RlLmRkbCA9IGNyZWF0ZUdyYXBoKGNvbC0yID4gMCB8fCByb3ctMSA+IDApXG4gICAgbm9kZS5kbGwgPSBjcmVhdGVHcmFwaChjb2wtMSA+IDAgfHwgcm93LTIgPiAwKVxuICAgIG5vZGUudWxsID0gY3JlYXRlR3JhcGgoY29sKzEgPiAwIHx8IHJvdy0yIDwgOClcbiAgICBub2RlLnV1bCA9IGNyZWF0ZUdyYXBoKGNvbCsyID4gMCB8fCByb3ctMSA8IDgpXG59XG5cbmNyZWF0ZUdyYXBoKCk7XG5cbi8vIGZ1bmN0aW9uIHN0YXJ0aW5nUG9zaXRpb24oY29sLCByb3cpIHtcbi8vICAgICBpZiAoY29sIDwgMCB8fCBjb2wgPiA3IHx8IHJvdyA8IDAgfHwgcm93ID4gNykgcmV0dXJuXG5cbi8vICAgICAvLyB3aGF0IGRvIGkgZG8gbm93XG5cbi8vIH1cblxuLy8gZnVuY3Rpb24gY3JlYXRlUG90ZW50aWFsTW92ZShjb2wsIHJvdywgY29sU2hpZnQsIHJvd1NoaWZ0KSB7XG4vLyAgICAgaWYgKGNvbFNoaWZ0ID4gMCkge1xuLy8gICAgICAgICBpZiAoY29sK2NvbFNoaWZ0IDwgOClcbi8vICAgICB9XG5cbi8vIH1cbi8vIGZ1bmN0aW9uIGxpc3RNb3Zlcyhjb2wsIHJvdykge1xuLy8gICAgIC8vcG9zc2libGUgbW92ZXNcblxuLy8gICAgIC8vIGRvIGkgcHVzaCB0aGVzZSB0byBhIHF1ZXVlPyBpcyBsaXN0TW92ZXMgYSByZWN1cnNpdmUgZnVuY3Rpb24/XG4vLyAgICAgaWYgKGNvbCsxIDwgOCB8fCByb3crMiA8IDgpIGNvbCArIDEsIHJvdyArIDJcbi8vICAgICBpZiAoY29sKzEgPCA4IHx8IHJvdysyIDwgOCkgY29sICsgMiwgcm93ICsgMVxuLy8gICAgIGlmIChjb2wrMSA8IDggfHwgcm93KzIgPiAwKSBjb2wgKyAyLCByb3cgLSAxXG4vLyAgICAgaWYgKGNvbCsxIDwgOCB8fCByb3crMiA+IDApIGNvbCArIDEsIHJvdyAtIDJcbi8vICAgICBpZiAoY29sKzEgPiAwIHx8IHJvdysyID4gMCkgY29sIC0gMSwgcm93IC0gMlxuLy8gICAgIGlmIChjb2wrMSA+IDAgfHwgcm93KzIgPiAwKSBjb2wgLSAxLCByb3cgLSAyXG4vLyAgICAgaWYgKGNvbCsxID4gMCB8fCByb3crMiA8IDgpIGNvbCAtIDIsIHJvdyArIDFcbi8vICAgICBpZiAoY29sKzEgPiAwIHx8IHJvdysyIDwgOCkgY29sIC0gMSwgcm93ICsgMlxuXG4vLyB9XG5cbi8vIC8vIG1ha2UgY2VsbCBvYmplY3QgLyBjbGFzc1xuLy8gY2xhc3MgQ2VsbCB7XG4vLyAgICAgY29uc3RydWN0b3IoKSB7XG4vLyAgICAgICAgIHRoaXMudmlzaXRlZCA9IGZhbHNlIFxuLy8gICAgIH1cbi8vIH1cblxuLy8gZnVuY3Rpb24gY3JlYXRlR2FtZUJvYXJkKCkge1xuLy8gICAgIGxldCBib2FyZCA9IFtdXG4vLyAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA4OyBpKyspIHtcblxuLy8gICAgICAgICBsZXQgcm93ID0gW11cbi8vICAgICAgICAgYm9hcmQucHVzaChyb3cpO1xuLy8gICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IDg7IGorKykge1xuLy8gICAgICAgICAgICAgcm93LnB1c2gobmV3IENlbGwpXG4vLyAgICAgICAgIH1cbi8vICAgICB9XG5cbi8vICAgICAvLyBkb2VzIGl0IG1ha2Ugc2Vuc2UgdGhhdCByb3cgYW5kIGNvbHVtbiBhcmUgaW4gdGhpcyBvcmRlci4gaXNuJ3QgaXQgXG4vLyAgICAgLy8gY29sdW1uLCB0aGVuIHJvdz9cbi8vICAgICBmdW5jdGlvbiBwbGFjZVBpZWNlKGNvbCwgcm93KSB7XG4vLyAgICAgICAgIC8vIHNvIGN1cnJlbnRseSwgdGhlIHJvd3MgYXJlIGludmVydGVkOyB0aGV5IHN0YXJ0IGZyb20gdGhlIHRvcCBub3QgdGhlIGJvdHRvbVxuLy8gICAgICAgICBib2FyZFs4IC0gcm93XVtjb2xdLnZpc2l0ZWQgPSB0cnVlXG4vLyAgICAgfVxuXG4vLyAgICAgZnVuY3Rpb24gZ2V0Qm9hcmQoKSB7XG4vLyAgICAgICAgIHJldHVybiBib2FyZDtcbi8vICAgICB9XG5cbi8vICAgICByZXR1cm4ge1xuLy8gICAgICAgICBwbGFjZVBpZWNlLFxuLy8gICAgICAgICBnZXRCb2FyZCxcblxuLy8gICAgIH07XG4vLyB9XG5cblxuLy8gLy8gc2hvdWxkIHRoZXJlIGJlIGEga25pZ2h0IG9iamVjdD8gb3Igc2hvdWxkIHRoaXMgYmUgYSBnYW1lQ29udHJvbGxlcj9cbi8vIGZ1bmN0aW9uIGdhbWVDb250cm9sbGVyKCkge1xuLy8gICAgIGNvbnN0IG5ld0JvYXJkID0gY3JlYXRlR2FtZUJvYXJkKClcbi8vICAgICAvLyB0aGlzIG1pZ2h0IGJlIHRlcnJpYmxlIGNvZGUsIGkgbmVlZCB0byByZXZpc2l0IGJ1aWxkaW5nIGEgaG91c2UgYXJ0aWNsZVxuLy8gICAgIGZ1bmN0aW9uIHNldFN0YXJ0aW5nUG9zaXRpb24oY29sLHJvdykge1xuLy8gICAgICAgICBuZXdCb2FyZC5wbGFjZVBpZWNlKGNvbCwgcm93KVxuLy8gICAgICAgICBjb25zb2xlLmxvZyhuZXdCb2FyZC5nZXRCb2FyZCgpKVxuLy8gICAgIH1cblxuLy8gICAgIC8vIGkgbmVlZCB0byBzZXQgYm91bmRzLi4uIHNvbWVob3cuLi4gc28ga25pZ2h0IGRvZXNuJ3QgbW92ZSBvdXQgb2YgdGhlIGdyaWRcbi8vICAgICBmdW5jdGlvbiBsaXN0TW92ZXMoc3RhcnRpbmdQb3NpdGlvbikge1xuXG5cbi8vICAgICAgICAgLy8gLi4uXG4vLyAgICAgfVxuXG4vLyAgICAgcmV0dXJuIHtcbi8vICAgICAgICAgc2V0U3RhcnRpbmdQb3NpdGlvbixcbi8vICAgICB9XG4vLyB9XG5cbi8vIGxldCBnYW1lID0gZ2FtZUNvbnRyb2xsZXIoKTtcbi8vIGdhbWUuc2V0U3RhcnRpbmdQb3NpdGlvbigxLDQpXG4vLyBmdW5jdGlvbiBrbmlnaHRNb3ZlcygpIHtcblxuLy8gfSJdLCJuYW1lcyI6WyJyb290IiwiY29uc3RydWN0b3IiLCJjb2wiLCJyb3ciLCJ0aGlzIiwicG9zaXRpb24iLCJ1dXIiLCJ1cnIiLCJkcnIiLCJkZHIiLCJkZGwiLCJkbGwiLCJ1bGwiLCJ1dWwiLCJjb25zb2xlIiwibG9nIiwiY3JlYXRlR3JhcGgiLCJub2RlIl0sInNvdXJjZVJvb3QiOiIifQ==